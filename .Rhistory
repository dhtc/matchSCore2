load(file="~/Dropbox/HCA_benchmarking_sample/QUARTZ-seq/out_Seurat/data_seu.obj_res0.4_dim10.RData")
load(file="~/Dropbox/HCA_benchmarking_sample/QUARTZ-seq/out_Seurat/QUARTZ-Seq_markers.RData")
load(file="~/Dropbox/HCA_benchmarking_sample/10X/reference_mod/gene_cl.ref3.RData")
gene_cl.ref
load(file="~/Dropbox/HCA_benchmarking_sample/10X/reference_mod/reference3_last_version.RData")
table(reference3)
clus <- factor(reference3)
table(reference3)
table(clus)
load(file="~/Dropbox/HCA_benchmarking_sample/10X/out_Seurat/seu/data_dim9_res0.1.RData")
scale.data <- data@scale.data
head(clus)
scale.data <- data@scale.data[,names(clus)]
table(clus)
names(gene_cl.ref)
prop=NULL
p.threshold=NULL
print("Splitting the refence into train and test dataset...")
sizes <- unlist(lapply(levels(clus),function(x) length(clus[which(clus %in% x)])))
names(sizes) <- levels(clus)
if(is.null(prop)){prop <- 0.5}
train.sample <- unlist(sapply(levels(clus),function(x) sample(x = which(clus %in% x),size = sizes[names(sizes)==x]*prop)))
s <- colnames(scale.data)[train.sample]
test.sample <- which(!colnames(scale.data) %in% s)
train.data <- scale.data[,train.sample]
test.data <- scale.data[,test.sample]
out.train <- clus[train.sample]
out.test <- clus[test.sample]
gene_cl.ref
var.train <- sapply(gene_cl.ref,function(x) Matrix::colSums(train.data[x,]))
var.train <- t(apply(var.train,1, function(x) (x-min(x))/(max(x)-min(x))))
var.test <- sapply(gene_cl.ref,function(x) Matrix::colSums(test.data[x,]))
model.train <- data.frame(out.train,var.train)
model.test <- data.frame(out.test,var.test)
require(Matrix)
library(nnet)
mod <- multinom(out.train ~ ., data = model.train,decay=0.0001,maxit = 500)
print(summary(mod))
fitted.results <- predict(mod, newdata = model.test, "probs")
fit <- apply(fitted.results,1,function(x) colnames(fitted.results)[which(x==max(x))])
if(is.null(p.threshold)){p.threshold <- 0.65}
fit <- apply(fitted.results,1,function(x) ifelse(max(x)>p.threshold,colnames(fitted.results)[which(x==max(x))],"unclassified"))
fit_res <- data.frame(out.test,fit,fitted.results)
acc <- length(which(as.character(fit_res$out.test)==as.character(fit_res$fit)))/length(fit_res$out.test)
print(paste("The accuracy of the fitted model is:",round(acc,digits = 2),"\n",sep = " "))
print(table(id_test=fit_res$out.test,class=fit_res$fit))
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
#mod <- train_model(scale.data,clus,gene_cl.ref)
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
mod <- train_model(scale.data,clus,gene_cl.ref)
cat(paste(" The accuracy of the model is:",round(acc,digits = 2),sep=" "))
cat(table(id_test=fit_res$out.test,class=fit_res$fit))
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
cat("\n",paste("The accuracy of the model is:",round(acc,digits = 2),sep=" "))
cat("\n",paste("The accuracy of the model is:",round(acc,digits = 2),sep=" "),"\n")
source(file="train_model.R")
mod <- train_model(scale.data,clus,gene_cl.ref)
load(file="~/Dropbox/HCA_benchmarking_sample/QUARTZ-seq/out_Seurat/data_seu.obj_res0.4_dim10.RData")
source(file="identity_map.R")
scale.data <- data@scale.data
dim(scale.data)
out <- identity_map(scale.data,gene_cl.ref)
gene_cl.ref
out <- identity_map(scale.data = scale.data,gene_cl.ref = gene_cl.ref)
source(file="identity_map.R")
out <- identity_map(scale.data = scale.data,gene_cl.ref = gene_cl.ref)
table(out$ids)
class(out$fit.prob)
source(file="identity_map.R")
out <- identity_map(scale.data = scale.data,gene_cl.ref = gene_cl.ref)
class(out$fit.prob)
table(out$ids)
library("devtools")
library(roxygen2)
create_package("matchSCore2")
setwd("matchSCore2/")
setup(path = ".", description = getOption("devtools.desc"), check = FALSE,
rstudio = TRUE, quiet = FALSE)
library("devtools")
library(roxygen2)
setwd("~/Dropbox/matchSCore.v2_pkg/")
create_package("matchSCore2")
setwd("matchSCore2/")
document()
check(document = FALSE)
sessionInfo()
library("devtools")
install_github('elimereu/matchSCore2')
library(matchSCore2)
library(matchSCore2)
load(file="data/seu.obj_PBMC.3k.RData")
load(file="data/PBMC.3K_Chromium_gene_cl_ref.RData")
load(file="data/seu.obj_HCA_MARS-Seq.RData")
## 3K PBMC dataset released by 10X (Reference)
load(file="data/seu.obj_PBMC.3k.RData")
## 3K PBMC dataset released by 10X (Reference)
load(file="data/seu.obj_PBMC.3k.RData")
load(file="data/PBMC.3K_Chromium_gene_cl_ref.RData")
ref <- data
## PBMC - HCA sample sequenced by MARS-Seq technique
load(file="data/seu.obj_HCA_MARS-Seq.RData")
## PBMC - HCA sample sequenced by MARS-Seq technique
load(file="data/seu.obj_HCA_MARS-Seq.RData")
obs <- data
?train_model
pbmc.gene_cl
table(data@ident)
table(data@ident)
table(ref@ident)
names(pbmc.gene_cl)
mod <- train_model(scale.data = data@scale.data,clus = ref@ident,gene_cl.ref = pbmc.gene_cl)
mod <- train_model(scale.data = ref@scale.data,clus = ref@ident,gene_cl.ref = pbmc.gene_cl)
mod <- train_model(scale.data = ref@scale.data,clus = ref@ident,gene_cl.ref = pbmc.gene_cl,prop = 0.75)
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = pbmc.gene_cl)
table(ids)
ids <- out$ids ### cell identities
table(ids)
probabilities <- out$fit.prob
head(probabilities)
?identity_map
load(file="data/gene_cl_MARS-Seq.RData")
gene_cl.obs <- gene_cl
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
ms$ggplot
data <- obs
table(obs@ident)
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="data/Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
tsne1<-TSNEPlot(object = data)
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","red")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","red")
tsne1<-TSNEPlot(object = data)
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_clusters.png",width = 8, height = 6,units = 'in', res = 600)
tsne
dev.off()
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
fids <- factor(ids)
names(fids) <- names(obs@ident)
obs@meta.data$ids <- fids
tsne1<-TSNEPlot(object = obs,group.by="fids")
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_clusters.png",width = 8, height = 6,units = 'in', res = 600)
tsne
dev.off()
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_matchSCore2_annotations.png",width = 8, height = 6,units = 'in', res = 600)
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
dev.off()
png(file="data/TSNE_MARS-Seq_clusters.png",width = 6, height = 6,units = 'in', res = 600)
tsne
dev.off()
png(file="data/TSNE_MARS-Seq_matchSCore2_annotations.png",width = 6, height = 6,units = 'in', res = 600)
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
dev.off()
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_clusters.png",width = 6, height = 6,units = 'in', res = 600)
tsne
dev.off()
png(file="data/TSNE_MARS-Seq_matchSCore2_annotations.png",width = 6, height = 6,units = 'in', res = 600)
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
dev.off()
png(file="data/TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_matchSCore2_annotations.png",width = 6, height = 4,units = 'in', res = 600)
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
dev.off()
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = pbmc.gene_cl,p.threshold = 0.75)
### cell identities
ids <- out$ids
table(ids)
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = pbmc.gene_cl,p.threshold = 0.65)
### cell identities
ids <- out$ids
table(ids)
## To each cell probabilities are assigned for any possible identity class
probabilities <- out$fit.prob
head(probabilities)
## The matchSCore2 function computes the clustering comparison and produce the heatmap table with Jaccard Indexes for each group combination
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="data/Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
fids <- factor(ids)
names(fids) <- names(obs@ident)
obs@meta.data$ids <- fids
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_matchSCore2_annotations.png",width = 6, height = 4,units = 'in', res = 600)
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
dev.off()
tsne
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
mod <- train_model(scale.data = ref@scale.data,clus = ref@ident,gene_cl.ref = pbmc.gene_cl,prop = 0.9)
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = pbmc.gene_cl,p.threshold = 0.8)
### cell identities
ids <- out$ids
table(ids)
## To each cell probabilities are assigned for any possible identity class
probabilities <- out$fit.prob
head(probabilities)
## The matchSCore2 function computes the clustering comparison and produce the heatmap table with Jaccard Indexes for each group combination
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
ms$ggplot
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="data/Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
tsne
fids <- factor(ids)
names(fids) <- names(obs@ident)
obs@meta.data$ids <- fids
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = pbmc.gene_cl,p.threshold = 0.9)
### cell identities
ids <- out$ids
table(ids)
## To each cell probabilities are assigned for any possible identity class
probabilities <- out$fit.prob
head(probabilities)
## The matchSCore2 function computes the clustering comparison and produce the heatmap table with Jaccard Indexes for each group combination
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
ms$ggplot
fids <- factor(ids)
names(fids) <- names(obs@ident)
obs@meta.data$ids <- fids
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
?train_model
## 3K PBMC dataset released by 10X (Reference)
# load(file="data/seu.obj_PBMC.3k.RData")
# load(file="data/PBMC.3K_Chromium_gene_cl_ref.RData")
# ref <- data
# table(ref@ident)
load(file="data/model.RData")
## PBMC - HCA sample sequenced by MARS-Seq
# load(file="data/seu.obj_HCA_MARS-Seq.RData")
# load(file="data/gene_cl_MARS-Seq.RData")
# obs <- data
# gene_cl.obs <- gene_cl
# table(obs@ident)
obs.scaled <- obs@scale.data
save(obs.scaled,file="data/obs.scaled.RData")
## 3K PBMC dataset released by 10X (Reference)
# load(file="data/seu.obj_PBMC.3k.RData")
# load(file="data/PBMC.3K_Chromium_gene_cl_ref.RData")
# ref <- data
# table(ref@ident)
load(file="data/model.RData")
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = pbmc.gene_cl,p.threshold = 0.65)
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = gene_cl.ref,p.threshold = 0.65)
load(file="data/gene_cl.ref.RData")
out <- identity_map(scale.data = obs@scale.data,model = mod,gene_cl.ref = gene_cl.ref,p.threshold = 0.65)
### cell identities
ids <- out$ids
table(ids)
## To each cell probabilities are assigned for any possible identity class
probabilities <- out$fit.prob
head(probabilities)
## The matchSCore2 function computes the clustering comparison and produce the heatmap table with Jaccard Indexes for each group combination
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
ms$ggplot
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="data/Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","red")
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
fids <- factor(ids)
names(fids) <- names(obs@ident)
obs@meta.data$ids <- fids
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","red","unclassified")
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","red","gray")
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","gray")
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","coral2","deepskyblue3","red","gray")
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
col=c("blueviolet","aquamarine","green4","maroon","orange","black","red","coral2","deepskyblue3","gray")
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_matchSCore2_annotations.png",width = 6, height = 4,units = 'in', res = 600)
tsne1<-TSNEPlot(object = obs,group.by="ids")
tsne<-tsne1+ ggtitle("Clusters") +scale_color_manual(values=col)+ theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
dev.off()
levels(data@ident)
tsne1<-TSNEPlot(object = obs,group.by="res.0.5")
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="data/TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
## The matchSCore2 function computes the clustering comparison and produce the heatmap table with Jaccard Indexes for each group combination
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="data/Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
load(file="data/gene_cl.ref.RData")
gene_cl.ref
data
levels(data@idet)
levels(data@ident)
levels(data@ident) <- c("CD4+ T-cells","CD14+ Monocytes","CD8+ T-cells and NK cells","B cells","HEK cells")
tsne1<-TSNEPlot(object = obs)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
tsne
png(file="TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
tsne
tsne1<-TSNEPlot(object = data)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
tsne
png(file="TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
levels(data@ident) <- c("CD4+ T cells","CD14+ Monocytes","CD8+ T cells and NK cells","B cells","HEK cells")
tsne1<-TSNEPlot(object = data)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
tsne1<-TSNEPlot(object = data)
tsne<-tsne1+ ggtitle("Clusters") + theme(legend.text = element_text(size = 14),axis.text =element_text(size = 16),text = element_text(size = 20)) + theme(plot.margin = unit(c(0.3,1,1,0), "lines"))
tsne
png(file="TSNE_MARS-Seq_clusters.png",width = 6, height = 4,units = 'in', res = 600)
tsne
dev.off()
names(gene_cl.obs)
names(gene_cl.obs) <- levels(data@ident)
## The matchSCore2 function computes the clustering comparison and produce the heatmap table with Jaccard Indexes for each group combination
ms <- matchSCore2(gene_cl.ref = pbmc.gene_cl,gene_cl.obs = gene_cl.obs,ylab = "Chromium",xlab = "MARS-Seq")
ms$ggplot
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="data/Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
## The matchSCore heatmap is stored in the ggplot slot of ms.
png(file="Heatmap.png",width = 8, height = 8,units = 'in', res = 300)
ms$ggplot
dev.off()
